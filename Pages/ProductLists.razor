@page "/list"

@using Microsoft.Extensions.Logging;
@using Estanteria.Data
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Hosting
@using System;  
@using System.IO;  

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ListillaService Listilla
@inject ILogger<Counter> logger
@inject Estanteria.Data.ApplicationDbContext _context

@inject IWebHostEnvironment Environment
 
@if (productos == null)
{
    if (!logged)
    {
        <p><em>You must authenticate in order to see this page.</em></p>
    }
    else
    {
        <p><em>Connecting with database...</em></p>
    }
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Precio</th>
                <th>Disponibles</th>
                <th>Imagen</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var p in productos)
            {               
                <tr>
                    <td>@p.Name</td>
                    <td>@p.Price</td>
                    <td>@p.Stock</td>  
                    @if(fullPath(p.ProductPicture)!=null){
                        <td><img class="rounded m-1" src="@fullPath(p.ProductPicture)" /></td>
                    } else {
                        <td></td>
                    }               
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Product[] productos;
    private bool logged;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        productos = null;
        logged = false;

        // Console.WriteLine("role? "+user.ToString());
        // if (user.Identity.IsAuthenticated)
        {
            // logger.LogWarning("Autenticado!!");
            logged = true;
            //forecasts = await Listilla.GetForecastAsync(DateTime.Now);
            try
            {
                productos = _context.Products.ToArray();
                foreach (Product i in productos)
                {
                    Console.WriteLine("Pdocusto: " + i.Name + ", "+i.Price+", "+i.Stock+", "+fullPath(i.ProductPicture));
                    
                }
            }
            catch
            {
                base.StateHasChanged();
            }
        }

    }

    protected string fullPath(string filename){
        Console.WriteLine("Fullpath con entrada: "+filename);
        if (filename==null)
            return null;
        string uploadsFolder = Path.Combine(Environment.WebRootPath, "images");
        return Path.Combine(uploadsFolder, filename); 
    }
}
