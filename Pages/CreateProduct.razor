@page "/FormsValidation"
@using Estanteria.Data
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject Estanteria.Data.ApplicationDbContext _context

@attribute [Authorize(Roles = "Admin")]

@if (logged)
{
    <h2>Nuevo producto</h2>
    <EditForm Model="@editContext" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <p>
            <label>
                Name:
                <InputText @bind-Value="product.Name" />
            </label>
        </p>
        <p>
            <label>
                Price:
                <InputNumber @bind-Value="product.Price" />
            </label>
        </p>
        @* <p>
            <label>
            Primary Classification:
            <InputSelect @bind-Value="starship.Classification">
            <option value="">Select classification ...</option>
            <option value="Exploration">Exploration</option>
            <option value="Diplomacy">Diplomacy</option>
            <option value="Defense">Defense</option>
            </InputSelect>
            </label>
            </p> *@
        <p>
            <label>
                How many in stock:
                <InputNumber @bind-Value="product.Stock" />
            </label>
        </p>

        <button type="submit">Submit</button>

    </EditForm>
}
else {
    <p><em>You must authenticate in order to see this page.</em></p>
}

@code {
    private Product product = new Product();
    private EditContext editContext;

    private bool logged;

    protected override async void OnInitialized()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        logged = false;



        if (user.Identity.IsAuthenticated)
        {
            logged = true;
        }
        editContext = new EditContext(product);
    }
    private async void HandleValidSubmit()
    {

        try
        {
            _context.Products.Add(product);
            await _context.SaveChangesAsync();
            /*var data = _context.Products.ToList();
            foreach (Product i in data)
            {
            Console.WriteLine("Pdocusto: " + i.Name);
            }*/
        }
        catch
        {
            base.StateHasChanged();
        }


        //var isValid = editContext.Validate();
        // List<Product> prods = new List<Product>();

        product = new Product();
    }
}