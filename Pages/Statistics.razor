@page "/Statistics"

@using Microsoft.Extensions.Logging;
@using Estanteria.Data
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ILogger<Counter> logger
@inject Estanteria.Data.ApplicationDbContext _context


@using ChartJs.Blazor.Charts
@using ChartJs.Blazor.ChartJS.PieChart
@using ChartJs.Blazor.ChartJS.Common.Properties
@using ChartJs.Blazor.Util

@if (logged){
    <p><ChartJsPieChart @ref="pieChartJs" Config="@_config" Width="600" Height="300"></ChartJsPieChart></p>
} else {
     <p><em>You must authenticate in order to see this page.</em></p>
}

@code {
    private bool logged;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;        
        logged = false;

        Console.WriteLine("user? "+user.Identity.Name);
        Console.WriteLine("user? "+user.Identity.GetType().GUID);
        if (user.Identity.IsAuthenticated)
        {
            logged = true;
            
        }

    }

    private PieConfig _config;
    public ChartJsPieChart pieChartJs;

    protected override void OnInitialized()
    {
        _config = new PieConfig
        {
            Options = new PieOptions
            {
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Sample chart from Blazor"
                },
                Responsive = true,
                Animation = new ArcAnimation
                {
                    AnimateRotate = true,
                    AnimateScale = true
                }
            }
        };

        _config.Data.Labels.AddRange(new[] { "A", "B", "C", "D" });

        var pieSet = new PieDataset
        {
            BackgroundColor = new[] { ColorUtil.RandomColorString(), ColorUtil.RandomColorString(), ColorUtil.RandomColorString(),
                ColorUtil.RandomColorString() },
            BorderWidth = 0,
            HoverBackgroundColor = ColorUtil.RandomColorString(),
            HoverBorderColor = ColorUtil.RandomColorString(),
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };

        pieSet.Data.AddRange(new double[] { 4, 5, 6, 7 });
        _config.Data.Datasets.Add(pieSet);
    }
}
